// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/millionaires": {
            "get": {
                "description": "Fetches a paginated list of millionaires from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "millionaires"
                ],
                "summary": "Get all millionaires",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "pageNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of millionaires retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/models.PaginationMillionaireDto"
                        }
                    },
                    "500": {
                        "description": "Error retrieving data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new millionaire to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "millionaires"
                ],
                "summary": "Create a new millionaire",
                "parameters": [
                    {
                        "description": "Millionaire data",
                        "name": "millionaire",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Millionaire"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Millionaire created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect JSON format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error creating millionaire",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/millionaires/{id}": {
            "get": {
                "description": "Fetches a millionaire's details using their unique ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "millionaires"
                ],
                "summary": "Get millionaire by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Millionaire ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Millionaire retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Millionaire"
                        }
                    },
                    "400": {
                        "description": "Incorrect ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Millionaire not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates millionaire details based on the provided ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "millionaires"
                ],
                "summary": "Update a millionaire",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Millionaire ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated millionaire data",
                        "name": "millionaire",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Millionaire"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Millionaire updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect ID or JSON format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating millionaire",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/photo/add/{millionaireId}": {
            "post": {
                "description": "Allows uploading a photo file for an existing millionaire.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "millionaires"
                ],
                "summary": "Upload a photo for a millionaire",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Photo file to upload",
                        "name": "photo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Millionaire ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Photo uploaded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Error receiving file",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error uploading or updating photo",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/photo/delete/{millionaireId}": {
            "delete": {
                "description": "Removes the associated photo of a millionaire and clears its record in the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "millionaires"
                ],
                "summary": "Delete a millionaire's photo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Millionaire ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Photo deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "No photo found for this millionaire",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error deleting or clearing photo path",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/photo/{imageName}": {
            "get": {
                "description": "Serves an image file from the uploads/photos directory based on the provided image name.",
                "produces": [
                    "image/jpeg"
                ],
                "tags": [
                    "millionaires"
                ],
                "summary": "Get a millionaire's photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image filename",
                        "name": "imageName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the requested image file"
                    },
                    "400": {
                        "description": "Image name is required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/feedback": {
            "post": {
                "description": "Accepts JSON feedback and sends it via email.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedback"
                ],
                "summary": "Send feedback",
                "parameters": [
                    {
                        "description": "Feedback data",
                        "name": "feedback",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FeedbackDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedback successfully sent",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data format or validation error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error while sending feedback",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/home": {
            "get": {
                "description": "Fetches homepage-related data and returns it as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "home"
                ],
                "summary": "Get homepage data",
                "responses": {
                    "200": {
                        "description": "Homepage data successfully retrieved",
                        "schema": {}
                    },
                    "500": {
                        "description": "Failed to get homepage data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/millionaires/search": {
            "get": {
                "description": "Searches for millionaires using optional filters such as name and country.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "millionaires"
                ],
                "summary": "Search for millionaires",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Last name of the millionaire",
                        "name": "lastName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "First name of the millionaire",
                        "name": "firstName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Middle name of the millionaire",
                        "name": "middleName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Country of the millionaire",
                        "name": "country",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of records per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching millionaires",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Millionaire"
                            }
                        }
                    },
                    "500": {
                        "description": "Error searching millionaire",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/millionaires/{id}": {
            "delete": {
                "description": "Deletes a millionaire based on the provided ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "millionaires"
                ],
                "summary": "Delete a millionaire",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Millionaire ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Millionaire deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error deleting millionaire",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.FeedbackDto": {
            "type": "object",
            "required": [
                "email",
                "message",
                "name"
            ],
            "properties": {
                "cityOrRegion": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gratitudeExpression": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                }
            }
        },
        "models.Millionaire": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "birthPlace": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "industry": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "middleName": {
                    "type": "string"
                },
                "netWorth": {
                    "type": "number"
                },
                "pathToPhoto": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.PaginationMillionaireDto": {
            "type": "object",
            "properties": {
                "millionaires": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Millionaire"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
